@model DatabaseAccess.AttendanceTable

@{
    ViewBag.Title = "Create";
}

<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">Add A New Attendance Student</h6>
    </div>
    <div class="card-body">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(model => model.StudentID, "Select Student", htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-5">
                        @Html.DropDownList("StudentID", null, htmlAttributes: new { @class = "form-control", @id = "StudentID" })
                        @Html.ValidationMessageFor(model => model.StudentID, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.SessionID, "Select Session", htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-5">
                        @Html.DropDownList("SessionID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SessionID, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.ClassID, "Select Class", htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-5">
                        @Html.DropDownList("ClassID", null, htmlAttributes: new { @class = "form-control", @id = "ClassID" })
                        @Html.ValidationMessageFor(model => model.ClassID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.AttendDate, "Attend Date", htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-5">
                        @Html.EditorFor(model => model.AttendDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AttendDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.AttendTime, "Attend Time", htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-5">
                        @Html.EditorFor(model => model.AttendTime, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AttendTime, "", new { @class = "text-danger" })
                    </div>
                </div>




                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-success" />
                        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-info" })

                    </div>
                </div>
            </div>
        }

    </div>
</div>
<script src="~/Scripts/jquery-3.7.0.min.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $('#StudentID').change(function () {
            $('#ClassID').html('');
            $.ajax({
                url: '@Url.Action("GetClassesByStudent", "AttendanceTables")',
                type: 'GET',
                data: { sid: $(this).val() },
                dataType: 'json',
                success: function (response) {
                    for (var i = 0; i < response.data.length; i++) {
                        $('#ClassID').append("<option value=" + response.data[i].ClassID + ">" + response.data[i].Name + "</option>");
                    }
                },
                error: function () {
                    // Xử lý lỗi nếu có
                }
            });
        });
    });
</script>
