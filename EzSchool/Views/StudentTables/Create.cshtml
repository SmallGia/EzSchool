@model DatabaseAccess.StudentTable

@{
    ViewBag.Title = "Create";
}

<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">Student Infomation</h6>
    </div>
    <div class="card-body">
        @using (Html.BeginForm("Create", "StudentTables", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()


            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group row">
                    <div class="col-lg-5">
                        @Html.LabelFor(model => model.SessionID, "Select Session", htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col">
                            @Html.DropDownList("SessionID", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.SessionID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-lg-5">
                        @Html.LabelFor(model => model.ProgrameID, "Select Programe", htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col">
                            @Html.DropDownList("ProgrameID", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ProgrameID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group row">

                    <div class="col-lg-5">
                        @Html.LabelFor(model => model.ClassID, "Select Current Class", htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col">
                            @Html.DropDownList("ClassID", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ClassID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-lg-5">
                        @Html.LabelFor(model => model.Name, "Student Name", htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group row">

                    <div class="col-lg-5">
                        @Html.LabelFor(model => model.FatherName, "Father Name", htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col">
                            @Html.EditorFor(model => model.FatherName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FatherName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-lg-5">
                        @Html.LabelFor(model => model.DateofBirth, "Date of Birth", htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col">
                            @Html.EditorFor(model => model.DateofBirth, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DateofBirth, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="form-group row">

                    <div class="col-lg-5">
                        @Html.LabelFor(model => model.Gender, "Enter Gender", htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col">
                            @*@Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })*@
                            @Html.DropDownList("Gender", new List<SelectListItem>
                                {
                                    new SelectListItem{ Text="Male", Value="Male"},
                                    new SelectListItem{ Text="Female", Value="Female"}
                                }, "--- Select ---", new { @class = "form-control" })
                            @*<div class="col">
                                @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                            </div>*@

                        </div>
                    </div>
                    <div class="col-lg-5">
                        @Html.LabelFor(model => model.ContactNo, "Contact No", htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col">
                            @Html.EditorFor(model => model.ContactNo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ContactNo, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group row">

                    <div class="col-lg-5">
                        @*@Html.LabelFor(model => model.Photo, htmlAttributes: new { @class = "control-label col-md-5" })
                            <div class="col">
                                @Html.EditorFor(model => model.Photo, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Photo, "", new { @class = "text-danger" })
                            </div>*@
                        @Html.LabelFor(model => model.PhotoFile, htmlAttributes: new { @class = "control-label" })
                        <span class="btn btn-default btn-file">
                            @Html.TextBoxFor(model => model.PhotoFile, new { type = "file" })
                        </span>

                    </div>

                    <div class="col-lg-5">
                        @Html.LabelFor(model => model.AddmissionDate, "AddmissionDate", htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col">
                            @Html.EditorFor(model => model.AddmissionDate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.AddmissionDate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>


                <div class="form-group row">

                    <div class="col-lg-5">
                        @Html.LabelFor(model => model.PreviousSchool, "Previous School", htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col">
                            @Html.EditorFor(model => model.PreviousSchool, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PreviousSchool, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-lg-5">
                        @Html.LabelFor(model => model.PreviousPercentage, "Previous Percentage", htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col">
                            @Html.EditorFor(model => model.PreviousPercentage, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PreviousPercentage, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group row">

                    <div class="col-lg-5">
                        @Html.LabelFor(model => model.EmailAddress, "Email", htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col">
                            @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-lg-5">
                        @Html.LabelFor(model => model.Address, "Address", htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col">
                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>


                <div class="form-group row">

                    <div class="col-lg-5">
                        @Html.LabelFor(model => model.Nationality, "Enter Nationalty", htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col">
                            @Html.EditorFor(model => model.Nationality, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Nationality, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-lg-5">
                        @Html.LabelFor(model => model.UserID, "Select User", htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col">
                            @Html.DropDownList("UserID", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.UserID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-success" />
                        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-defaut" })

                    </div>
                </div>
            </div>
        }

    </div>
</div>